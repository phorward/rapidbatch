template.html§0TITLE§1CONTENT
rb5_ger_dialogs_1.html§Meldungen und Statusausgaben§RapidBATCH ist mit einer Vielzahl von build-in Dialogen ausgestattet, die individuell angepasst und optimal in Ihren Scripts eingesetzt werden können. Bevor Sie anfangen, selber komplett eigene Dialoge in RapidBATCH zu kreieren (was auch möglich ist) sollten Sie erst einmal schauen, ob bereits die RapidBATCH build-in Dialoge für Ihren Anwendungsfall ausreichen. Der Vorteil bei den build-in Dialogen von RapidBATCH besteht nämlich darin, dass Sie nur eine einzige Anweisung oder Funktion aufrufen müssen, um den kompletten Dialog zu starten. Bei selbst programmierten Dialogfenstern, wozu wir in einem späteren Kapitel kommen werden, müssen Sie für jedes Ereignis mit oder auf dem Dialog eine entsprechende Routine programmieren, was dann wiederum mehr Aufwand erfordert. Dieses Kapitel stellt nun die von RapidBATCH bereitgestellten build-in Dialoge vor und zeigt auf, wie diese angewendet und angepasst werden können.<br /><br /><!-- br --><!-- br -->Meldungsfenster, so genannte Messageboxes, bieten die einfachste Art, dem Benutzer Meldungen oder Daten zu präsentieren oder auch um einfache Abfragen bereitzustellen. Bereits kennengelernt haben Sie die ECHO-Anweisung, mit der Sie ein Meldungsfenster mit dem übergebenen Wert auf dem Bildschirm ausgeben lassen können. ECHO dient zur einfachsten Ausgabe einer Information, daher wird sie auch oft in unseren Beispielen benutzt.<!-- br --><!-- br --><div class="image"><img src="img/echo.gif" alt="Bild eines ECHO-Dialogs" title="ECHO-Dialog" /><br /><!-- br -->Einfache Ausgabe von Informationen und Meldungen mit dem ECHO-Dialog</div><!-- br --><!-- br --><!-- br -->Ähnlichen Zweck erfüllt auch die CONFIRM-Funktion, die einen Benutzerdialog mit Ja-Nein-Option anzeigt. CONFIRM erwartet als Parameter eine Rückgabe-Variable (die Auskunft über den gedrückten Button gibt) und einen Aufforderungstext bzw. eine Frage, die mit &quot;Ja&quot; oder &quot;Nein&quot; beantwortet werden kann. Wenn der Button &quot;Ja&quot; geklickt wurde, wird der Wert '0' an die Rückgabe-Variable zurückgegeben, bei &quot;Nein&quot; der Wert '-1'.<!-- br --><!-- br --><div class="image"><img src="img/confirm.gif" alt="Bild eines CONFIRM-Dialogs" title="CONFIRM-Dialog" /><br /><!-- br -->Ja-Nein-Auswahl mit dem CONFIRM-Dialog</div><!-- br --><!-- br -->Ein Beispiel zur Verwendung von CONFIRM ist folgendes Script:<br><!-- br --><br><!-- br -->[code]%start<br /><!-- br --><font color="#808080">rem Abfrage: Script beenden?</font><br /><!-- br -->confirm <font color="#000080">[ende]</font> = <font color="#0000ff">'Möchten Sie das Script beenden?'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem Wenn "Nein" gedrückt wurde, springe zum Anfang</font><br /><!-- br --><b>if</b> <font color="#000080">[ende]</font> = <font color="#0000ff">'-1'</font> <b>goto</b> start<br /><!-- br -->echo <font color="#0000ff">'Script beendet.'</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->ECHO und CONFIRM bieten somit eine einfache Möglichkeit, schnell einen Wert zu präsentieren oder eine einfache Ja-Nein-Abfrage zu gestalten.<br><!-- br --><br><!-- br -->Um aber eine Messagebox individueller zu gestalten, bietet Ihnen RapidBATCH die MSGBOX-Anweisung. MSGBOX benötigt als Parameter einen Titel, einen Meldungstext sowie einen Messagebox-Style, der als Zahl definiert wird.<br><!-- br -->Eine ganz einfache Messagebox wäre hier:<br><!-- br --><br><!-- br -->[code]msgbox <font color="#0000ff">'Meldung'</font>, <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'0'</font>[/code]<!-- br --><br><!-- br -->Welcher der angezeigten Buttons gedrückt wurde, wird in die vordeklarierte Variable [errorcode] gespeichert (im obigen Beispiel immer 0, weil ja nur ein Button zur Auswahl steht). [errorcode] ist eine Variable, die von vielen Anweisungen in RapidBATCH verschiedene Status- oder Fehlercodes erhält. Eben hier, welcher Button gedrückt wurde.<!-- br --><!-- br --><div class="remark">Anmerkung: Die MSGBOX-Anweisung kann auch als Funktion aufgerufen werden! Der Wert, der dann an [errorcode] übergeben wird, wird stattdessen bei dieser Methode in die entsprechende Rückgabe-Variable gespeichert. MSGBOX sollte daher vermehrt als Funktion eingesetzt werden, kann aber natürlich auch weiterhin als Anweisung, wie hier beschrieben, aufgerufen werden.</div><!-- br --><!-- br -->Ein Messagebox-Style setzt sich aus einem so genannten Button-Wert und einem Icon-Wert zusammen. Zudem lässt sich auch die Position des Eingabefokus (welcher Button gedrückt wird, wenn der Benutzer nur die Entertaste betätigt) mit diesem Wert bestimmen.<br><!-- br --><br><!-- br -->Mögliche Button-Styles für Messageboxes sind:<br><!-- br --><br><!-- br --><!-- br --><!-- MESSAGEBOX-BUTTON-STYLES ------------------------------------------------------------------><!-- br --><table class="std" style="margin-left: 20px;" cellspacing="10"><!-- br --><tr><!-- br -->  <td style="padding-right: 10px;"><b>Style-ID:</b></td><!-- br -->  <td><b>Beispiel:</b></td><!-- br -->  <td><b>Button-Style (jew. Rückgabewert an [errorcode] in Klammern):</b></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>0</td><td style="padding-right: 10px;"><img src="img/msgbox_style0.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>OK (1)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>1</td><td style="padding-right: 10px;"><img src="img/msgbox_style1.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>OK (1) + CANCEL (2)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>2</td><td style="padding-right: 10px;"><img src="img/msgbox_style2.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>CANCEL (3) + RETRY (4) + IGNORE (5)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>3</td><td style="padding-right: 10px;"><img src="img/msgbox_style3.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>YES (6) + NO (7) + CANCEL (2)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>4</td><td style="padding-right: 10px;"><img src="img/msgbox_style4.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>YES (6) + NO (7)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>5</td><td style="padding-right: 10px;"><img src="img/msgbox_style5.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>RETRY (4) + CANCEL (2)</td><!-- br --></tr><!-- br --></table><!-- br --><!-- END MESSAGEBOX-BUTTON-STYLES --------------------------------------------------------------><!-- br --><br><br><!-- br -->Rechnet man zum gewünschten Button-Style noch einen der folgenden Werte hinzu, so kann man auch eines der vier Standard-Icons bestimmten.<!-- br --><br><!-- br --><br><!-- br --><!-- br --><!-- MESSAGEBOX-ICON-STYLES ------------------------------------------------------------------><!-- br --><table class="std" style="margin-left: 20px;" cellspacing="10"><!-- br --><tr><!-- br -->  <td style="padding-right: 10px;"><b>Icon-Style:</b></td><!-- br -->  <td><b>Beispiel:</b></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>0</td><td style="padding-right: 10px;"><img src="img/msgbox_icon0.gif" alt="Screenshot ohne Icon-Style" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>16</td><td style="padding-right: 10px;"><img src="img/msgbox_icon16.gif" alt="Screenshot MSGBOX-Icon-Style 16" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>32</td><td style="padding-right: 10px;"><img src="img/msgbox_icon32.gif" alt="Screenshot MSGBOX-Icon-Style 32" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>48</td><td style="padding-right: 10px;"><img src="img/msgbox_icon48.gif" alt="Screenshot MSGBOX-Icon-Style 48" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>64</td><td style="padding-right: 10px;"><img src="img/msgbox_icon64.gif" alt="Screenshot MSGBOX-Icon-Style 64" /></td><!-- br --></tr><!-- br --></table><!-- br --><!-- END MESSAGEBOX-BUTTON-STYLES --------------------------------------------------------------><!-- br --><!-- br --><br><!-- br --><br><!-- br -->Ein Beispiel wäre hier <br><!-- br --><br><!-- br -->[code]%start<br /><!-- br -->msgbox <font color="#0000ff">'Eine Frage!'</font>, <font color="#0000ff">'Klicken Sie einen der Buttons!'</font>, <font color="#0000ff">'48'</font> + <font color="#0000ff">'4'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[errorcode]</font> = <font color="#0000ff">'6'</font><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;rem Fall: Ja</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Sie haben "Ja" angeklickt'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>goto</b> start<br /><!-- br --><b>elseif</b> <font color="#000080">[errorcode]</font> = <font color="#0000ff">'7'</font><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;rem Fall: Nein</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Sie haben "Nein" angeklickt'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>goto</b> start<br /><!-- br --><b>else</b><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;rem Fall: Abbruch</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Und tschüss...'</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Wenn man zum Style noch den Wert 0 (für den ersten), 256 (für den zweiten) oder 512 (für den dritten) hinzurechnet, kann man den Eingabefokus auch direkt auf einen der Buttons setzen. Welcher Button den Focus hat sieht man an dem kleinen, getrichelten Kasten um den Button herum. Hat ein Button den Focus, so wird dieser Button ausgelöst, wenn der Benutzer einfach die Eingabetaste betätigt.<br><!-- br --><br><!-- br -->Beispiel:<br><!-- br --><br><!-- br -->[code]msgbox <font color="#0000ff">'Test1'</font>, <font color="#0000ff">'Fokus 1'</font>, <font color="#0000ff">'64'</font> + <font color="#0000ff">'3'</font> + <font color="#0000ff">'0'</font><br /><!-- br -->msgbox <font color="#0000ff">'Test2'</font>, <font color="#0000ff">'Fokus 2'</font>, <font color="#0000ff">'64'</font> + <font color="#0000ff">'3'</font> + <font color="#0000ff">'256'</font><br /><!-- br -->msgbox <font color="#0000ff">'Test3'</font>, <font color="#0000ff">'Fokus 3'</font>, <font color="#0000ff">'64'</font> + <font color="#0000ff">'3'</font> + <font color="#0000ff">'512'</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br --><br><!-- br --><br><!-- br -->Neben den bis jetzt besprochenen Messageboxes bietet RapidBATCH aber auch eine andere Form der Meldungs- und Statusübermittlung: Die INFOBOX!<br><!-- br -->Manchmal ist es nötig, z.B. bei länger andauernden Operationen, eine Meldung in der Form &quot;Bitte warten...&quot; einzublenden. Die INFOBOX kann vom Programmierer daher völlig frei ein- oder ausgeblendet werden und besitzt weder einen &quot;Ok&quot;-Button noch kann sie verschoben oder in den Hintergrund gebracht werden.<!-- br --><!-- br --><div class="image"><img src="img/infobox.gif" alt="Bild eines INFOBOX-Dialogs" title="INFOBOX-Dialog" /><br /><!-- br -->Einblendung des INFOBOX-Dialoges</div><!-- br --><!-- br -->Ein einfaches Beispiel für die Verwendung der INFOBOX ist folgendes Script, das eine INFOBOX mit dem Text &quot;Hello World&quot; für 5 Sekunden einblendet. Zum Abwarten der 5 Sekunden wird hier das Script mit Hilfe der WAIT-Anweisung für 5000 Millisekunden (= 5 Sekunden) angehalten.<br><!-- br --><br><!-- br -->[code]infobox <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'show'</font><br /><!-- br -->wait <font color="#0000ff">'5000'</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->In unserem Fall wird die INFOBOX automatisch wieder ausgeblendet, weil das Script beendet ist. <!-- br -->Um die INFOBOX manuell auszublenden, benutzen Sie INFOBOX noch einmal in der Form<br><!-- br --><br><!-- br -->[code]infobox <font color="#0000ff">''</font>, <font color="#0000ff">'hide'</font>[/code]<!-- br --><br><!-- br -->oder verwenden sie die professionellere Methode, indem Sie die vordeklarierte Variable [InfoBox_Enabled] auf den Wert 'hide' oder '-1' setzen (durch setzen auf 'show' oder '0' wird INFOBOX wieder angezeigt).<br><!-- br --><br><!-- br -->Beispiel:<br><!-- br --><br><!-- br -->[code]echo <font color="#0000ff">'INFOBOX wird jetzt eingeblendet...'</font><br /><!-- br -->infobox <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'show'</font><br /><!-- br -->wait <font color="#0000ff">'2000'</font><br /><!-- br -->echo <font color="#0000ff">'INFOBOX wird jetzt ausgeblendet...'</font><br /><!-- br --><font color="#000080">[InfoBox_Enabled]</font> = <font color="#0000ff">'hide'</font><br /><!-- br -->echo <font color="#0000ff">'INFOBOX ist jetzt ausgeblendet!'</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Da INFOBOX ein komplett eigener Dialog von RapidBATCH ist (Messageboxes werden von Windows selber bereitgestellt), lässt er sich auch individualisieren, z.B. kann die Höhe und Breite des Dialogs mit Hilfe der vordeklarierten Variablen [InfoBox_Height] und [InfoBox_Width] vom Programmierer beeinflusst werden. Die Angabe der Größe erfolgt in Pixeln, die Zentrierung des Dialogs auf dem Bildschirm findet automatisch statt, kann aber auch durch das Setzen der Variablen [InfoBox_X] und [InfoBox_Y] auf eine beliebige Position des Bildschirms erfolgen. Wird [InfoBox_X] und/oder [InfoBox_Y] auf den Wert '0' gesetzt, erfolgt eine automatische Zentrierung des Dialogs auf der jeweiligen Achse (was der Standard-Einstellung entspricht).
rb5_ger_dialogs_2.html§Abfragen von Werten§Um Werte vom Benutzer abzufragen, stellt RapidBATCH gleich drei verschiedene, leistungsstarke Dialoge zur Verfügung.<br><!-- br --><br><!-- br -->Häufigste Verwendung findet dabei die bereits kennengelernte INPUTBOX. Dieser Dialog ermöglicht eine Eingabeaufforderung, in die der Benutzer einen Wert, z.B. einen Namen oder eine Zahl eingeben kann. INPUTBOX ist eine Funktion, deren Rückgabewert der eingegebene String ist, und benötigt drei Parameter, nämlich den Dialog-Titel, einen Aufforderungstext sowie einen Vorgabewert, der direkt im Eingabefeld eingeblendet wird und vom Script-Benutzer geändert oder auch ganz ersetzt werden kann.<br><!-- br --><br>Ein einfaches Beispiel ist das bereits im Grundlagenkapitel benutzte Script, bei dem der Benutzer einen Wert eingeben kann, der dann in einer ECHO-Messagebox wieder ausgegeben wird:<br><!-- br --><br><!-- br -->[code]inputbox <font color="#000080">[wert]</font> = <font color="#0000ff">'Eingabe eines Wertes'</font>, <font color="#0000ff">'Bitte geben Sie einen Wert ein:'</font>, <font color="#0000ff">'Hallo!'</font><br /><!-- br -->echo <font color="#0000ff">'Der eingegebene Wert lautet: '</font> # <font color="#000080">[wert]</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br --><!-- br --><div class="image"><img src="img/inputbox.gif" alt="Bild eines INPUTBOX-Dialogs" title="INFOBOX-Dialog" /><br /><!-- br -->Der INPUTBOX-Dialog zur Abfrage von beliebigen Werten</div><!-- br --><!-- br -->Klickt der Benutzer auf den OK-Button im Dialog (oder auch einfach nur Return), wird der in das Textfeld eingegebene Text zurückgegeben. Klickt der Benutzer den Cancel-Button oder den Schließen-Button des Fensters rechts oben, liefert die Funktion einen Leerstring zurück.<br><br><!-- br -->Die Beschriftung der Buttons lässt sich durch Setzen der vordeklarierten Variablen [InputBox_Ok] und [InputBox_Cancel] verändern, so daß z.B. auch deutsche Bezeichnungen für die Buttons dort angegeben werden können. Defaultmäßig wird die INPUTBOX zentriert auf dem Bildschirm dargestellt; Eine beliebige, individuelle Anzeigeposition des Dialogs lässt sich allerdings mit Hilfe der vordeklarierten Variablen [InputBox_X] und [InputBox_Y] erzielen. Setzt man diese auf den Wert '0' (Standardwert), so bewirkt dies die Zentrierung des Dialogs auf der jeweiligen Achse.<br><!-- br --><br><!-- br -->[code]<font color="#000080">[InputBox_Ok]</font> = <font color="#0000ff">'Alles klar!'</font><br /><!-- br --><font color="#000080">[InputBox_Cancel]</font> = <font color="#0000ff">'Stop!'</font><br /><!-- br -->inputbox <font color="#000080">[test]</font> = <font color="#0000ff">'Geänderte Buttons'</font>, <font color="#0000ff">'Bitte geben Sie etwas ein:'</font>, <font color="#0000ff">'hello world'</font><br /><!-- br -->echo <font color="#000080">[test]</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Neben dem INPUTBOX-Dialog bietet RapidBATCH auch den PWDBOX-Dialog. Eine PWDBOX ist nichts anderes als eine &quot;INPUTBOX für Passwörter&quot;, die zur Eingabe des Wertes anstatt eines normalen Textfeldes ein maskiertes Eingabefeld zur Verfügung stellt (in dem jedes eingegebene Zeichen durch ein &quot;*&quot; maskiert wird). Ein PWDBOX-Dialog kann (und sollte!) daher auch nur zur verdeckten Eingabe von Passwörtern eingesetzt werden (daher auch der Name: &quot;PWD&quot; ist die englische Abkürzung für &quot;Password&quot;). Die Parameter von PWDBOX sind dieselben wie bei der INPUTBOX (mit selber Funktion), zudem lassen sich, da PWDBOX das selbe Fenster verwendet wie INPUTBOX, die Beschriftung der Buttons ebenfalls über [InputBox_Ok] und [InputBox_Cancel] ändern (ebenso [InputBox_X] und [InputBox_Y] für die Positionierung des Dialogs auf dem Bildschirm).<br><!-- br --><br><!-- br -->[code]pwdbox <font color="#000080">[passwort]</font> = <font color="#0000ff">'Passwort'</font>, <font color="#0000ff">'Bitte geben Sie Ihr Passwort ein:'</font>, <font color="#0000ff">''</font><br /><!-- br -->echo <font color="#0000ff">'Ihr Passwort lautet: '</font> # <font color="#000080">[passwort]</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br --><br><!-- br -->Bisher haben wir nur einzeilige Eingaben tätigen können; Diese reichen natürlich für sehr viele Anwendungsbereiche bereits aus. Wenn wir aber nun größere Eingaben, z.B. eine Adresse oder sogar einen ganzen Text vom Script-User abfragen möchten, genügen Dialoge wie INPUTBOX oder PWDBOX nicht mehr.<br><!-- br -->Hier müssen wir auf ein weiteres Dialogfenster von RapidBATCH zugreifen: Die EDITBOX! EDITBOX ermöglicht es, einen kompletten Text vom Benutzer editieren zu lassen. Ähnlich wie in einem Text-Editor lässt sich in der EDITBOX das Textfenster scrollen und durch Ziehen mit der Maus vergrößern oder verkleinern. EDITBOX arbeitet im Grunde genauso wie INPUTBOX, da durch Klicken des am unteren Rand befindlichen OK-Buttons der im Textfeld eingegebene/editierte Text, oder durch anklicken des Cancel-Buttons bzw. des Schließen-Buttons rechts oben, ein Leerstring an die beim Funktionsaufruf angegebene Rückgabe-Variable zurückgegeben wird. <br><!-- br --><!-- br --><div class="image"><img src="img/editbox.gif" alt="Bild eines EDITBOX-Dialogs" title="EDITBOX-Dialog" /><br /><!-- br -->Der EDITBOX-Dialog zur mehrzeiligen Eingabe bzw. Bearbeitung von Texten und Werten</div><!-- br --><!-- br -->Als Parameter erwartet die EDITBOX-Funktion einen Fenstertitel, den Text, der im Editierfeld stehen soll, und einen Style-Parameter, ob der Text im Editierfeld editierbar (Wert 'writeable' oder '0') oder nicht-editierbar (Wert 'readonly' oder '-1') ist. Dieser Parameter ermöglicht dann auch die Anzeige von Text ohne dass der Benutzer diesen editieren kann (beispielsweise um eine ReadMe-Datei oder einen Lizenztext bei einem Setup-Script anzuzeigen).<br><!-- br --><br><!-- br -->Beispiel:<br><!-- br --><br><!-- br -->[code]<font color="#808080">rem Texte editieren mit EDITBOX</font><br /><!-- br -->editbox <font color="#000080">[text]</font> = <font color="#0000ff">'Bitte geben Sie einen Text ein:'</font>, <font color="#0000ff">''</font>, <font color="#0000ff">'writeable'</font><br /><!-- br -->msgbox <font color="#0000ff">'Der Text lautet:'</font>, <font color="#000080">[text]</font>, <font color="#0000ff">'64'</font><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Der EDITBOX-Dialog kann mit Hilfe der vordeklarierten Variablen [EditBox_Width] und [EditBox_Height] in der Größe angepasst werden, ebenso ist auch die Positionierung des Dialogs auf dem Bildschirm mit den Variablen [EditBox_X] und [EditBox_Y] ohne weiteres möglich, wobei auch hier eine automatische (und bereits vordefinierte) Zentrierung des Dialogs mit dem Wert 0 ermöglicht wird.<!-- br --><br><!-- br --><br><!-- br -->Die Beschriftung der Buttons ist über [EditBox_Ok] und [EditBox_Cancel] möglich. Wenn man die Button-Beschriftung auf einen Leerstring setzt, wird der entsprechende Button einfach ausgeblendet, so dass man z.B. eine EDITBOX mit nur einem &quot;Weiter&quot;-Button programmieren kann, wie in folgendem Beispiel (die Funktionen OPENBOX und READFILE werden später noch genauer besprochen!):<br><!-- br --><br><!-- br -->[code]<font color="#808080">rem Datei-Anzeige Script mit der EDITBOX</font><br /><!-- br --><font color="#808080">rem Dateiname abfragen</font><br /><!-- br -->openbox <font color="#000080">[file]</font> = <font color="#0000ff">'Bitte Datei wählen:'</font>, <font color="#0000ff">'Textdateien|*.txt'</font><br /><!-- br --><b>if</b> <font color="#000080">[file]</font> = <font color="#0000ff">''</font> <b>halt</b><br /><!-- br --><br /><!-- br --><font color="#808080">rem Datei lesen</font><br /><!-- br -->readfile <font color="#000080">[text]</font> = <font color="#000080">[file]</font>, <font color="#0000ff">'0'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem EDITBOX individualisieren und anzeigen</font><br /><!-- br --><font color="#000080">[EditBox_Ok]</font> = <font color="#0000ff">''</font><br /><!-- br --><font color="#000080">[EditBox_Cancel]</font> = <font color="#0000ff">'Weiter &gt;'</font><br /><!-- br --><font color="#000080">[EditBox_Width]</font> = <font color="#0000ff">'450'</font><br /><!-- br --><font color="#000080">[EditBox_Height]</font> = <font color="#0000ff">'480'</font><br /><!-- br -->editbox <font color="#000080">[text]</font> = <font color="#0000ff">'Inhalt von: '</font> # <font color="#000080">[file]</font>, <font color="#000080">[text]</font>, <font color="#0000ff">'readonly'</font><br /><!-- br --><b>end</b>[/code]
rb5_ger_dialogs_3.html§Menüs und Auswahlmöglichkeiten§Bisher haben Sie bereits einige Möglichkeiten kennengelernt, um Daten vom Benutzer einzulesen. Diese Daten sind jedoch völlig frei vom Benutzer definierbar. Um aber dem Benutzer die Auswahl eines Wertes aus einer bestimmten Anzahl von Werten zu ermöglichen, stellt RapidBATCH auch zwei leistungsstarke Dialoge zur Verfügung.<br><!-- br --><br><!-- br -->Die LISTBOX findet hierbei am häufigsten Verwendung. LISTBOX ist ein Dialog mit einer Listenauswahlmöglichkeit, die sehr vielseitig eingesetzt werden kann: Ob als Programm-Menü, Dateiauswahl oder für andere Zwecke - Das Anwendungsspektrum für den LISTBOX-Dialog ist äusserst breit und vielseitig gehalten.<!-- br --><!-- br --><div class="image"><img src="img/listbox.gif" alt="Bild eines LISTBOX-Dialogs" title="LISTBOX-Dialog" /><br />Der LISTBOX-Dialog bietet eine vielseitige und schnell realisierte Auswahlmöglichkeit</div><!-- br --><!-- br -->LISTBOX benötigt zur Anwendung zwei Parameter. Einmal einen Dialog-Titel und eine so genannte Liste. Solch eine Liste ist ein String, dessen einzelne &quot;Elemente&quot;, die später in der LISTBOX angezeigt werden, standardmäßig durch Pipe-Zeichen (|) getrennt sind (dieses Listentrennzeichen lässt sich global über die Variable [std_sep] auch ändern). Ein Array lässt sich als Liste nicht direkt übergeben, kann aber mit Hilfe der Funktion &quot;arrayToList&quot; aus der ARRAY.RB-Funktionsbibliothek schnell und einfach in eine Item-Liste für den LISTBOX-Dialog umgewandelt werden.<br><!-- br -->Rückgabewert der LISTBOX-Funktion ist der ausgewählte Wert aus der Liste. Ist dieser Wert leer, so wurde entweder kein Menüeintrag ausgewählt oder der Schließen-Button der LISTBOX betätigt.<br><!-- br --><br><!-- br -->Ein einfaches Beispiel für eine LISTBOX ist folgendes Script mit einer kleinen Auswahl:<br><!-- br --><br><!-- br -->[code]<font color="#808080">rem Einfache Auswahl mit einer LISTBOX:</font><br /><!-- br -->listbox <font color="#000080">[auswahl]</font> = <font color="#0000ff">'Menü'</font>, <font color="#0000ff">'Menüeintrag 1|Menüeintrag 2|Menüeintrag 3'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[auswahl]</font> = <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Kein Element ausgewählt!'</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Gewähltes Element ist '</font> # <font color="#000080">[auswahl]</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Die LISTBOX ist ebenfalls sehr anpassungsfähig. Äquivalent zu den bisher vorgestellten Dialogen lässt sich auch die LISTBOX mit Hilfe der Variablen [ListBox_Width] und [ListBox_Height] in der Größe verändern; [ListBox_X] und [ListBox_Y] ermöglichen die individuelle Positionierung des Dialoges (Defaultwert ist auch hier '0' zur automatischen Zentrierung). Mit [ListBox_Ok] lässt sich auch der Text auf dem OK-Button der LISTBOX verändern.<br><!-- br -->Um die Auswahl von mehr als einem Eintrag aus einer LISTBOX zu ermöglichen, bietet RapidBATCH ausserdem die Variable [ListBox_MultiSel]. Diese ist standardmäßig auf den Wert '-1' gesetzt, was soviel bedeutet wie &quot;Keine Mehrfachauswahl&quot;. Setzt man den Wert auf '0', lassen sich in der LISTBOX mehr als ein Eintrag auswählen, wenn nötig auch alle. In diesem Fall wird ebenfalls (im Fall von mehreren selektierten Einträgen) eine Liste von durch Pipe-Zeichen (bzw. das durch die Variable [std_sep] definierte Zeichen) von einander getrennten Werten zurückgeliefert.<br><!-- br --><br><!-- br -->Folgendes Beispiel demonstriert die Verwendung der o.g. Variablen. Beobachten Sie bitte auch den Rückgabewert von LISTBOX bei einer Mehrfach-Auswahl.<br><!-- br --><br><!-- br -->[code]<font color="#808080">rem Dateiliste generieren (Dateinamen werden von FINDFILES als Liste zurückgegeben</font><br /><!-- br -->findfiles <font color="#000080">[dateiliste]</font> = <font color="#0000ff">'C:\WINDOWS\*.*'</font>, <font color="#0000ff">'1'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem Dateiauswahl ermöglichen mit LISTBOX</font><br /><!-- br --><font color="#000080">[ListBox_Width]</font> = <font color="#0000ff">'300'</font><br /><!-- br --><font color="#000080">[ListBox_Height]</font> = <font color="#0000ff">'500'</font><br /><!-- br --><font color="#000080">[ListBox_MultiSel]</font> = <font color="#0000ff">'0'</font><br /><!-- br --><font color="#000080">[ListBox_Ok]</font> = <font color="#0000ff">'Auswählen!'</font><br /><!-- br -->listbox <font color="#000080">[auswahl]</font> = <font color="#0000ff">'Bitte Datei wählen:'</font>, <font color="#000080">[dateiliste]</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[auswahl]</font> = <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Kein Element ausgewählt!'</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Gewählte Datei(en): '</font> # <font color="#000080">[auswahl]</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br --><br><!-- br -->Neben der LISTBOX bietet RapidBATCH seit der Version 5.0 nun auch eine neue, professionelle Menü-Auswahlmöglichkeit: Den TRAYMENU-Dialog! TRAYMENU ermöglicht das Anzeigen eines so genannten Traybar-Menüs in der Windows-Taskleiste. Der &quot;Dialog&quot; selbst wird durch ein kleines Icon repräsentiert, wobei man das Menü mit einem Rechtsklick auf das Icon anzeigen kann. Mit dieser Möglichkeit kann man beispielsweise ein Script entwickeln, welches permanent im Hintergrund läuft, aber mittels Auswahl von Programmfunktionen oder durch Klicken des Icons eine Aktion auslösen kann.<br><!-- br --><div class="image"><!-- br -->	<img src="img/traymenu_tooltip.gif" alt="Bild eines TRAYMENU-Icons mit Tooltip" alt="TRAYMENU-Dialog mit Tooltip" /><!-- br -->	&nbsp;<!-- br -->	<img src="img/traymenu_open.gif" alt="Bild eines TRAYMENU-Icons mit geöffnetem Menü" alt="TRAYMENU-Dialog mit geöffnetem Menü" /><br /><!-- br -->	Einfache aber effektive Auswahl- und Menüprogrammierung mit dem TRAYMENU-Menüdialog<!-- br --></div><!-- br -->Im Grunde genommen wird TRAYMENU genauso verwendet wie die LISTBOX. Man übergibt einen Titel (der als Tooltip angezeigt wird, wenn der Benutzer mit der Maus über das Icon fährt) und eine Liste an Menü-Einträgen, getrennt durch Pipe-Zeichen (diese kann auch leer sein, dann wird gar kein Menü erzeugt). Klickt der Benutzer nun auf das Icon des Tray-Menüs, so liefert die Funktion einen Leerstring zurück; Andernfalls, wenn der Benutzer einen Eintrag aus dem Menü auswählt, wird der entsprechende Menü-String zurückgeliefert.<br><!-- br --><br><!-- br -->[code]traymenu <font color="#000080">[eintrag]</font> = <font color="#0000ff">'Bitte wählen Sie einen Eintrag aus...'</font>, <font color="#0000ff">'Eintrag 1|Eintrag 2|Eintrag 3'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[eintrag]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Der gewählte Menüpunkt lautet: '</font> # <font color="#000080">[eintrag]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Das Icon wurde angeklickt.'</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><br><!-- br -->Um ein Menü professionell mit Shortcuts auszustatten, kann man auch einen Buchstaben jedes Eintrags mit einem &amp;-Zeichen versehen. Dies weist RapidBATCH an, den nachfolgenden Buchstaben zu unterstreichen, so dass dieser als Shortcut fungiert (wenn das Menü nun offen ist lässt sich mit diesem Shortcut ein Eintrag durch Tastatureingabe auswählen). Beispiel:<br><!-- br --><br><!-- br -->[code]traymenu <font color="#000080">[eintrag]</font> = <font color="#0000ff">'Bitte wählen Sie einen Eintrag aus...'</font>, <font color="#0000ff">'Eintrag &1|Eintrag &2|Eintrag &3'</font>[/code]<!-- br --><br><!-- br -->Jetzt kann man die einzelnen Einträge mit 1, 2 oder 3 auch über die Tastatur auswählen. Um ein &-Zeichen im Menü auszugeben schreibt man einfach stattdessen "&&", z.B.<br><!-- br --><br><!-- br -->[code]traymenu <font color="#000080">[test]</font> = <font color="#0000ff">'Ein Test'</font>, <font color="#0000ff">'Hello && World'</font>[/code]<!-- br --><br><!-- br -->Übrigens: das &amp-Zeichen wird, wenn ein Eintrag ausgewählt wurde, wieder mit übergeben, daher bitte auch in Bedingungen auf den Returnwert von TRAYMENU abprüfen!<br><!-- br -->Um eine Trennlinie in das Menü einzubauen (z.B. um viele Menüeinträge in kleine Gruppen zu trennen), schreibt man einfach einen einzelnen Bindestrich als Menüeintrag. Beispiel:<br><!-- br --><br><!-- br -->[code]traymenu <font color="#000080">[eintrag]</font> = <font color="#0000ff">'Bitte wählen Sie einen Eintrag aus...'</font>, <font color="#0000ff">'Eintrag &1|Eintrag &2|Eintrag &3|-|B&eenden'</font>[/code]<!-- br --><br><!-- br -->TRAYMENU verwendet als Icon immer das Standard-Icon der Applikation. Bei interpretierten Scripts ist dies immer das Icon des RapidBATCH-Interpreters, bei compilierten Scripts das entsprechend hinzugelinkte Programmicon.<br><!-- br -->Mit Hilfe der vordeklarierten Variablen [app_icon] lässt sich allerdings auch eine externe ICO-Datei als Icon benutzen. [app_icon] setzt dabei ein Icon, das für alle Fenster der Anwendung gilt, d.h. es lässt sich hierüber auch das Icon, welches bei LISTBOX, INFOBOX, EDITBOX und INPUTBOX links oben erscheint, mit ändern. Wird [app_icon] auf einen Leerstring gesetzt, wird automatisch das Standard-Icon der Anwendung wieder benutzt.<br><!-- br --><br><!-- br -->Beispiel:<br><!-- br --><br><!-- br -->[code]<font color="#808080">rem TRAYMENU unter Verwendung eines individuellen Programm-Icons</font><br /><!-- br --><font color="#000080">[app_icon]</font> = <font color="#0000ff">'..\icons\orca1.ico'</font><br /><!-- br -->traymenu <font color="#000080">[eintrag]</font> = <font color="#0000ff">'Bitte wählen Sie einen Eintrag aus...'</font>, <font color="#0000ff">'Eintrag &1|Eintrag &2|Eintrag &3|-|B&eenden'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[eintrag]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Der gewählte Menüpunkt lautet: '</font> # <font color="#000080">[eintrag]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Das Icon wurde angeklickt.'</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]
rb5_ger_dialogs_4.html§Datei- und Verzeichnisauswahl§Nicht selten kommt es vor, dass man Datei- oder Verzeichnispfade vom Benutzer abfragen muss. Der Einsatz einer INPUTBOX wäre hier zwar auch möglich, aber unangebracht. Zur Lösung dieses Problems stellt RapidBATCH drei Dialoge zur Verfügung: OPENBOX, SAVEBOX und FOLDERBOX!<!-- br --><br><!-- br --><br><!-- br -->Die Dialoge OPENBOX und SAVEBOX ermöglichen die Eingabe eines Dateinamens sowie das Browsen durch Verzeichnisse. Des weiteren kann ein Dateifilter gesetzt werden, der nur bestimmte Dateitypen zur Anzeige bringt.<!-- br -->Der einzige Unterschied zwischen OPENBOX und SAVEBOX besteht darin, dass eine OPENBOX einen &quot;Datei öffnen&quot;-Dialog bereitstellt, wärend eine SAVEBOX einen &quot;Datei speichern&quot;-Dialog anzeigt.<!-- br --><br><!-- br --><br><!-- br -->Folgendes Beispiel zeigt die Verwendung der OPENBOX zur Auswahl einer <!-- br -->Datei.<br><br><!-- br --><!-- br -->[code]openbox <font color="#000080">[datei]</font> = <font <!-- br -->color="#0000ff">'Bitte wählen Sie eine Datei aus:'</font>, <font <!-- br -->color="#0000ff">'Alle Dateien|*.*'</font><br /><!-- br -->echo <font color="#0000ff">'Der Pfad zur gewählten Datei lautet: '</font> <!-- br --># <font color="#000080">[datei]</font><br /><!-- br --><b>end</b>[/code]<!-- br --><!-- br --><div class="image"><img src="img/openbox.gif" alt="Bild eines OPENBOX-Dialogs" title="OPENBOX-Dialog" /><br /><!-- br -->Die OPENBOX-Funktion stellt einen &quot;Datei öffnen&quot;-Dialog zur Verfügung</div><!-- br --><!-- br -->Die OPENBOX-Funktion (alle Parameter sind hierbei identisch für die SAVEBOX) benötigt neben der Rückgabevariable einen Dialog-Titel (oder einen Aufforderungstext) und den bereits angesprochenen Dateifilter.<br><!-- br -->Dieser Dateifilter kann sehr individuell gestaltet werden und ermöglicht den Einsatz der Wildcard-Platzhalter * und ?.<br><!-- br -->Übergeben wird der Dateifilter als Liste ähnlich wie bei LISTBOX oder TRAYMENU, nur dass hier nach folgendem Muster vorgegangen werden muss:<!-- br --><!-- br --><br><!-- br --><br><!-- br --><b>Filterbezeichnung | Filter</b><!-- br --><br><!-- br --><br><!-- br --><!-- br -->Obiges Beispiel legt als einen Filter *.* (alle Dateinamen, die eine Dateiendung haben) an und benennt ihn mit &quot;Alle Dateien&quot;.<!-- br -->Wenn wir nun alle Textdateien (Dateienung: TXT) filtern möchten, verwenden wir folgenden Filter:<!-- br --><!-- br --><br><!-- br --><br><!-- br --><b>Textdateien|*.txt</b><!-- br --><br><!-- br --><br><!-- br --><!-- br -->Die OPENBOX ermöglich dem Benutzer auch die Auswahl eines Filters, falls mehrere gegeben sind. Man kann also einfach einen weiteren Filter an einen bereits vorhandenen dranhängen, indem man das obige Muster einfach durch ein weiteres Pipe-Listentrennzeichen vom vorhergehenden Filter trennt. Folgendes beispiel legt drei Filter an.<!-- br --><!-- br --><br><!-- br --><br><!-- br --><b>EXE-Dateien|*.exe|COM-Dateien|*.com|Batch-Dateien|*.bat</b><!-- br --><br><!-- br --><br><!-- br --><!-- br -->Es lassen sich auch mehrere Filtermasken unter einem einzelnen Filternamen speichern. Hierbei trennt man jeden Filter durch ein Semikolon. Folgender Filter ermöglich die Anzeiger aller Dateien oder nur die Anzeige von ausführbaren Programmdateien (EXE, COM, BAT):<!-- br --><!-- br --><br><!-- br --><br><!-- br --><b>Ausführbare Programme|*.exe;*.com;*.bat|Alle Dateien|*.*</b><!-- br --><br><!-- br --><br><!-- br --><!-- br -->Standardmässig lässt sich in einem OPENBOX- bzw. SAVEBOX-Dialog nur eine einzelne Datei anwählen. Eine Mehrfach-Auswahl ist jedoch auch ohne Probleme möglich, indem man für die OPENBOX die Variable [OpenBox_MultiSel] auf den Wert '0' setzt (äquivalent [SaveBox_MultiSel] für die SAVEBOX). Ist diese Variable auf dem Wert '0', so lassen sich mehrere Dateinamen aus der Dateiliste auswählen. Bestätigt der Benutzer nun seine Eingabe mit OK, gibt der Dialog eine Liste der Dateinamen- und Pfade, jeweils getrennt durch Pipe-Zeichen, zurück, wobei als erstes Listenelement der absolute Pfad zu den Dateien angegeben wird und in den darauf folgenden Elementen die einzelnen Dateiamen (ohne den Pfad).<!-- br --><br><!-- br --><br><!-- br -->Folgendes Beispiel zeigt, wie man eine Mehrfach-Dateiauswahl verarbeitet.<!-- br --><br><br><!-- br -->[code]<font color="#808080">rem Mehrfachauswahl ermöglichen</font><br /><!-- br --><font color="#000080">[OpenBox_MultiSel]</font> = <font color="#0000ff">'0'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem Dateien auswählen</font><br /><!-- br -->openbox <font color="#000080">[dateiliste]</font> = <font color="#0000ff">'Dateinamen auswählen'</font>, <font color="#0000ff">'Alle Dateien|*.*'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[dateiliste]</font> ! <font color="#0000ff">''</font><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;rem Pfad auslesen</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[pfad]</font> = <font color="#000080">[dateiliste]</font>, <font color="#0000ff">'|'</font>, <font color="#0000ff">'1'</font><br /><!-- br --><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;rem Dateiliste auslesen</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[i]</font> = <font color="#0000ff">'1'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>repeat</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[i]</font> + <font color="#0000ff">'1'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[datei]</font> = <font color="#000080">[dateiliste]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[i]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>if</b> <font color="#000080">[datei]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Datei Nr. '</font> # (<font color="#000080">[i]</font> - <font color="#0000ff">'1'</font>) # <font color="#0000ff">': '</font> # <font color="#000080">[pfad]</font> # <font color="#0000ff">'\'</font> # <font color="#000080">[datei]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>elseif</b> <font color="#000080">[datei]</font> = <font color="#0000ff">''</font> & <font color="#000080">[i]</font> = <font color="#0000ff">'2'</font><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rem Wenn nur eine Datei ausgewählt wurde, steht ihr Name</font><br /><!-- br --><font color="#808080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rem und Pfad in [pfad]...</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Einzige gewählte Datei: '</font> # <font color="#000080">[pfad]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>endif</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>until</b> <font color="#000080">[datei]</font> = <font color="#0000ff">''</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><!-- br --><div class="image"><img src="img/openbox_multisel.gif" alt="Auswahl von mehreren Dateien im OPENBOX-Dialog" title="OPENBOX-Dialog mit Mehrfach-Dateiauswahl" /><br /><!-- br -->Mehrfach-Auswahl in einem &quot;Datei öffnen&quot;-Dialog</div><!-- br --><!-- br -->Wird [OpenBox_MultiSel] bzw. [SaveBox_MultiSel] wieder auf den Wert '-1' gesetzt, ist wieder nur eine Einfach-Auswahl mit dem jeweiligen Dialogfenster möglich.<!-- br --><br><br><!-- br -->Bei vielen Anwendungen will man auch auf den Komfort nicht verzichten, einfach einen Dateinamen ohne Dateinamenserweiterung in &quot;Datei öffnen&quot;- und &quot;Datei speichern&quot;-Dialog einzugeben. Die Dateinamenserweiterung soll dabei automatisch an den eingegebenen Dateinamen angehängt werden. Um dies zu ermöglichen, kann man eine Standard-Erweiterung für Dateinamen in der Variablen [OpenBox_DefFileExt] bzw. [SaveBox_DefFileExt] auf eine beliebige Dateinamenserweiterung (OHNE den Punkt!) setzen:<!-- br --><br><!-- br --><br><!-- br -->[code]<font color="#808080">rem Standarderweiterung: TXT-Datei</font><br /><!-- br --><font color="#000080">[SaveBox_DefFileExt]</font> = <font color="#0000ff">'txt'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem Dateinamen abfragen</font><br /><!-- br -->savebox <font color="#000080">[dateiname]</font> = <font color="#0000ff">'Datei speichern als...'</font>, <font color="#0000ff">'Textdateien|*.txt'</font><br /><!-- br --><br /><!-- br -->echo <font color="#0000ff">'Eingegebener Dateiname mit Erweiterung: '</font> # <font color="#000080">[dateiname]</font><br /><!-- br --><b>end</b>[/code]<!-- br --><!-- br --><br><br><!-- br --><div class="image"><img src="img/folderbox.gif" alt="Bequemes Auswählen eines Verzeichnisses mit der FOLDERBOX." title="FOLDERBOX-Dialog zur Verzeichnisauswahl" /><br /><!-- br -->Bequeme Verzeichnisauswahl mit dem &quot;Ordner suchen&quot;-Dialog der FOLDERBOX-Funktion</div><!-- br --><!-- br -->Neben OPENBOX und SAVEBOX bietet RapidBATCH auch einen Dialog zur Auswahl von Verzeichnissen an: Die FOLDERBOX! Parameter sind hierbei ein Aufforderungstext sowie ein optionaler Basis-Pfad, der automatisch im Dialog angewählt wird.<br><!-- br -->Folgendes Script zeigt das Windows-Verzeichnis in einem Verzeichnis-Auswahldialog an:<!-- br --><br><br><!-- br --><!-- br -->[code]<font color="#808080">rem Verzeichnisauswahl</font><br /><!-- br -->folderbox <font color="#000080">[verzeichnis]</font> = <font color="#0000ff">'Bitte wählen Sie ein Verzeichnis:'</font>, <font color="#000080">[windir]</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem Ausgabe des Verzeichnispfades, falls dieses gewählt wurde</font><br /><!-- br --><b>if</b> <font color="#000080">[verzeichnis]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Pfad zum gewählten Verzeichnis: '</font> # <font color="#000080">[verzeichnis]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Sie haben kein Verzeichnis ausgewählt!'</font><br /><!-- br --><b>endif</b><br /><!-- br --><b>end</b>[/code]<!-- br --><!-- br -->Wird hier der Abbrechen- oder Schließen-Button des Dialogs gewählt, gibt die Funktion einen Leerstring zurück.
