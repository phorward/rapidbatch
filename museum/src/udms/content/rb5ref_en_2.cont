template_ref_en.html§0TITLE§1SYNTAX§1DESCRIPTION§1EXAMPLE§1REMARKS
rb5ref_en_2_upvarlowvar.html§UPVAR, LOWVAR§UPVAR result = expression<br><!-- br -->LOWVAR result = expression§UPVAR converts all characters of a string-expression to upper-case order.<br><!-- br -->LOWVAR converts all characters of a string-expression to lower-case order.<br><!-- br --><br><!-- br -->Characters, which are already in upper/lower-case order are simply ignored by both functions.§<font color="#000080">[text]</font> = <font color="#0000ff">'This is a test-value.'</font><br /><!-- br -->upvar <font color="#000080">[utext]</font> = <font color="#000080">[text]</font><br /><!-- br -->lowvar <font color="#000080">[ltext]</font> = <font color="#000080">[text]</font><br /><!-- br -->echo <font color="#000080">[text]</font> # <font color="#0000ff">' in upper-case order: '</font> # <font color="#000080">[utext]</font><br /><!-- br -->echo <font color="#000080">[text]</font> # <font color="#0000ff">' in lower-case order: '</font> # <font color="#000080">[ltext]</font><br /><!-- br --><b>end</b>§none
rb5ref_en_2_trimvar.html§TRIMVAR§TRIMVAR result = expression§Removes all blanks from in front of and behind a string-expression.§<font color="#000080">[text]</font> = <font color="#0000ff">'&nbsp;&nbsp;&nbsp;&nbsp;RapidBATCH&nbsp;&nbsp;'</font><br /><!-- br -->echo <font color="#0000ff">'***'</font> # <font color="#000080">[text]</font> # <font color="#0000ff">'***'</font><br /><!-- br -->trimvar <font color="#000080">[trim_text]</font> = <font color="#000080">[text]</font><br /><!-- br -->echo <font color="#0000ff">'***'</font> # <font color="#000080">[trim_text]</font> # <font color="#0000ff">'***'</font><br /><!-- br --><b>end</b><!-- br -->§none
rb5ref_en_2_getchrgetasc.html§GETCHR, GETASC§GETCHR character = ascii-value<br><!-- br -->GETASC ascii-value = character§GETCHR returns the particular ASCII-character to the specified ASCII-code value.<br><!-- br -->GETASC returns the particular ASCII-code value to the specified ASCII-character.§getchr <font color="#000080">[zeichen]</font> = <font color="#0000ff">'65'</font><br /><!-- br -->echo <font color="#0000ff">'Character to code 65: '</font> # <font color="#000080">[zeichen]</font><br /><!-- br -->getasc <font color="#000080">[ascii]</font> = <font color="#0000ff">'B'</font><br /><!-- br -->echo <font color="#0000ff">'ASCII-Code of character &quot;B&quot; '</font> # <font color="#000080">[ascii]</font>§none
rb5ref_en_2_getlen.html§GETLEN§GETLEN length = expression§Returns the length in characters of the sepcified value.§getlen <font color="#000080">[len]</font> = <font color="#0000ff">'Hello World'</font><br /><!-- br -->echo <font color="#0000ff">'"Hello World" has a length of '</font> # <font color="#000080">[len]</font> # <font color="#0000ff">' characters.'</font>§none
rb5ref_en_2_copyvar.html§COPYVAR§COPYVAR sub-string = expression, start, length§Extracts a substring from the specified value, that begins at the character on position <i>start</i> and has from this position a lengh of as <i>length</i> specified characters.<br><!-- br -->The result is the sub-string extracted from the string expression.§<font color="#000080">[name]</font> = <font color="#0000ff">'Arnold Schwarzenegger'</font><br /><!-- br --><font color="#808080">rem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456789012345678901 (character positions)</font><br /><!-- br -->copyvar <font color="#000080">[lastname]</font> = <font color="#000080">[name]</font>, <font color="#0000ff">'8'</font>, <font color="#0000ff">'14'</font><br /><!-- br -->copyvar <font color="#000080">[firstname]</font> = <font color="#000080">[name]</font>, <font color="#0000ff">'1'</font>, <font color="#0000ff">'6'</font><br /><!-- br -->echo <font color="#000080">[lastname]</font> # <font color="#0000ff">', '</font> # <font color="#000080">[firstname]</font>§If the value '-1' is specified as <i>start</i> parameter value, the length of characters are copied from the right of the string expression.
rb5ref_en_2_getpos.html§GETPOS§GETPOS position = expression, substr, count§Finds the specified sub-string (<i>substr</i>-parameter) within the string-expression and returns its character position.<br><!-- br -->By using the count-parameter it is also possible to determine the as <i>count</i>-parameter specified appearance of <i>substr</i> within the string-expression.<br><!-- br --><br><!-- br --><!-- br -->If the string defined as <i>substr</i> was not found within the string-expresson, '0' is returned.§getpos <font color="#000080">[pos]</font> = <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'llo'</font>, <font color="#0000ff">'1'</font><br /><!-- br -->echo <font color="#0000ff">'Position is: '</font> # <font color="#000080">[pos]</font><br /><!-- br --><br /><!-- br -->getpos <font color="#000080">[pos]</font> = <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'l'</font>, <font color="#0000ff">'3'</font><br /><!-- br -->echo <font color="#0000ff">'Position is: '</font> # <font color="#000080">[pos]</font>§If the variable [case_sensitivity] is set to '0', GETPOS will ignore upper-/lower-case order within the substr-parameter, so that also equal strings in another case orders are considered.
rb5ref_en_2_gettok.html§GETTOK§GETTOK token = expression, separation-string, token-counter§The tokenizer-function GETTOK returns a so called token from a string-expression. A token is a sub-string, separated by a special delimiter-character (or delimiter-string) from other tokens. When GETTOK is executed, it returns the token positioned at the as <i>count</i>-parameter specified token-position in the string-expression.§findfiles <font color="#000080">[files]</font> = <font color="#0000ff">'c:\jmksf\rb5\*.exe'</font>, <font color="#0000ff">'1'</font><br /><!-- br --><br /><!-- br --><font color="#000080">[count]</font> = <font color="#0000ff">'1'</font><br /><!-- br --><b>repeat</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[tok]</font> = <font color="#000080">[files]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[count]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>if</b> <font color="#000080">[tok]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Token at position '</font> # <font color="#000080">[count]</font> # <font color="#0000ff">' is: '</font> # <font color="#000080">[tok]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>endif</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[count]</font> + <font color="#0000ff">'1'</font><br /><!-- br --><b>until</b> <font color="#000080">[tok]</font> = <font color="#0000ff">''</font>§If the end of the string is reached, GETTOK returns all characters that had been read until the string-end from the last token-delimiter.<br><!-- br -->If the variable [case_sensitivity] is set to '0', GETTOK will also consider token-separators which don't fit the case order of the specified token-delimiter string.
rb5ref_en_2_getcharat.html§GETCHARAT§GETCHARAT character = expression, positions§Returns the character at the specified position in the string-expression.<!-- br -->§<font color="#000080">[text]</font> = <font color="#0000ff">'Hello World'</font><br /><!-- br --><font color="#808080">rem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12345678901</font><br /><!-- br -->getcharat <font color="#000080">[chr]</font> = <font color="#000080">[text]</font>, <font color="#0000ff">'5'</font><br /><!-- br -->echo <font color="#0000ff">'The character at position 5 in the string "'</font> # <font color="#000080">[text]</font> # <font color="#0000ff">'" is "'</font> # <font color="#000080">[chr]</font> # <font color="#0000ff">'"'</font><br /><!-- br --><b>end</b>§none
rb5ref_en_2_replacevar.html§REPLACEVAR§REPLACEVAR result = expression, find, replace§Replaces every appearance of the specified search-string <i>find</i> within the string-expression and replaces it by the string <i>replace</i>.§chdir <font color="#0000ff">'c:\jmksf\rb5'</font><br /><!-- br -->findfiles <font color="#000080">[files]</font> = <font color="#0000ff">'*.exe'</font>, <font color="#0000ff">'1'</font><br /><!-- br -->replacevar <font color="#000080">[files]</font> = <font color="#000080">[files]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[new_line]</font><br /><!-- br -->echo <font color="#0000ff">'Content of '</font> # <font color="#000080">[current]</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[files]</font><!-- br -->§If the variable [case_sensitivity] has the value '0', REPLACEVAR will also replace strings that do not fit the same case order as specified as find-parameter.
rb5ref_en_2_randvar.html§RANDVAR§RANDVAR random-value = range§Generates a pseudo-random-number between 0 and the specified value <i>range</i> - 1.§<font color="#808080">rem Generate random value...</font><br /><!-- br -->randvar <font color="#000080">[random]</font> = <font color="#0000ff">'255'</font><br /><!-- br -->echo <font color="#0000ff">'Random-value: '</font> # <font color="#000080">[random]</font><!-- br -->§At the implementation of RANDVAR, the problem was noticed that the same set of random numbers sometimes is returned continual. This problem has been solved as far as possible, but it may happen that a muster of numbers is always re-generated. RANDVAR uses the system time as base for its numbers.
rb5ref_en_2_cntvar.html§CNTVAR§CNTVAR count = expression, substr§Returns the number the string <i>substr</i> appears within the string-expression.§readfile <font color="#000080">[text]</font> = <font color="#0000ff">'C:\jmksf\rb5\readme.txt'</font>, <font color="#0000ff">'0'</font><br /><!-- br --><br /><!-- br -->cntvar <font color="#000080">[cnt]</font> = <font color="#000080">[text]</font>, <font color="#0000ff">'RapidBATCH'</font><br /><!-- br -->echo <font color="#0000ff">'The file contains '</font> # <font color="#000080">[cnt]</font> # <font color="#0000ff">' X the word "RapidBATCH"'</font>§If the variable [case_sensitivity] is set to '0', CNTVAR also counts appearances of the substr-parameter having another case order than specified.
