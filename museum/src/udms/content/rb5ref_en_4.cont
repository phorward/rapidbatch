template_ref_en.html§0TITLE§1SYNTAX§1DESCRIPTION§1EXAMPLE§1REMARKS
rb5ref_en_4_echo.html§ECHO§ECHO message-text§Displays the expression specified as <i>message-text</i> in a messagebox with single OK-button.<!-- br --><!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/echo.gif" alt="Image of an ECHO-dialog." title="Screenshot" /><!-- br -->§echo <font color="#0000ff">'Hello World'</font><br /><!-- br --><br /><!-- br --><font color="#000080">[res]</font> = <font color="#0000ff">'5'</font> + <font color="#0000ff">'4'</font><br /><!-- br -->echo <font color="#0000ff">'The result is: '</font> # <font color="#000080">[res]</font>§The default-text for the titlebar of the ECHO-messagebox can be customized over the variable [Echo_Title]. By default, it is &quot;RapidBATCH Echo&quot;.<br><!-- br -->Use the MSGBOX-function, to display an individually designed messagebox-dialog to the user.
rb5ref_en_4_confirm.html§CONFIRM§CONFIRM answer = question§CONFIRM is another shortcut for a messagebox-dialog with YES-NO-Buttons. If the user presses YES, the result-variable gets the value '0' ([true]), else '-1' ([false]).<!-- br --><!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/confirm.gif" alt="Image of a CONFIRM-dialog." title="Screenshot" />§<b>repeat</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;confirm <font color="#000080">[quit]</font> = <font color="#0000ff">'Do you want to terminate this script?'</font><br /><!-- br --><b>until</b> <font color="#000080">[quit]</font> = <font color="#000080">[true]</font><br /><!-- br -->echo <font color="#0000ff">'Script is now terminated.'</font><br /><!-- br --><b>end</b><!-- br -->§To change CONFIRM's standard title for the messagebox (default: "RapidBATCH Confirmation"), change its value using the pre-declared variable [Confirm_Title].<br><!-- br -->Use the MSGBOX-function, to display an individually designed messagebox-dialog to the user.<!-- br -->
rb5ref_en_4_msgbox.html§MSGBOX§MSGBOX result = title, message-text, style<br /><!-- br -->MSGBOX title, message-text, style<!-- br -->§Displays a messagebox.<br /><br /><!-- br --><!-- br -->This function can also be used as an instruction, which is the old-styled method from RapidBATCH 5.0's predecessors.<!-- br --><br><!-- br -->MSGBOX (both the function and the instruction) expect a title that is shown in the messagebox's title-bar, a message-text that is displayed in the messagebox itself and a style-mode that specifies the messagebox's look and feel as well as the buttons that are displayed for selection.<br /><br /><!-- br --><!-- br -->Which button was pressed is returned by the function or, if MSGBOX called as a instruction, to [errorcode]. The pressed button is represented by a numerical-value, that is also covered from the following table.<br /><!-- br --><!-- br --><br /><br /><!-- br --><!-- MESSAGEBOX-BUTTON-STYLES ------------------------------------------------------------------><!-- br --><table class="std" style="margin-left: 20px;" cellspacing="10"><!-- br --><tr><!-- br -->  <td style="padding-right: 10px;"><b>Style-ID:</b></td><!-- br -->  <td><b>Example:</b></td><!-- br -->  <td><b>Button-Style (the value that is returned to the return-variable or [errorcode] is written in brackets):</b></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>0</td><td style="padding-right: 10px;"><img src="img/msgbox_style0.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>OK (1)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>1</td><td style="padding-right: 10px;"><img src="img/msgbox_style1.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>OK (1) + CANCEL (2)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>2</td><td style="padding-right: 10px;"><img src="img/msgbox_style2.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>CANCEL (3) + RETRY (4) + IGNORE (5)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>3</td><td style="padding-right: 10px;"><img src="img/msgbox_style3.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>YES (6) + NO (7) + CANCEL (2)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>4</td><td style="padding-right: 10px;"><img src="img/msgbox_style4.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>YES (6) + NO (7)</td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>5</td><td style="padding-right: 10px;"><img src="img/msgbox_style5.gif" alt="Screenshot MSGBOX-Style 0" /></td><td>RETRY (4) + CANCEL (2)</td><!-- br --></tr><!-- br --></table><!-- br --><!-- END MESSAGEBOX-BUTTON-STYLES --------------------------------------------------------------><!-- br --><!-- br --><br /><br /><!-- br -->By adding the following icon-styles, an individual icon can be displayed on the left of the message-text.<!-- br --><br /><br /><!-- br --><!-- br --><!-- MESSAGEBOX-ICON-STYLES ------------------------------------------------------------------><!-- br --><table class="std" style="margin-left: 20px;" cellspacing="10"><!-- br --><tr><!-- br -->  <td style="padding-right: 10px;"><b>Icon-Style:</b></td><!-- br -->  <td><b>Example:</b></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>0</td><td style="padding-right: 10px;"><img src="img/msgbox_icon0.gif" alt="Screenshot without Icon-Style" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>16</td><td style="padding-right: 10px;"><img src="img/msgbox_icon16.gif" alt="Screenshot MSGBOX-Icon-Style 16" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>32</td><td style="padding-right: 10px;"><img src="img/msgbox_icon32.gif" alt="Screenshot MSGBOX-Icon-Style 32" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>48</td><td style="padding-right: 10px;"><img src="img/msgbox_icon48.gif" alt="Screenshot MSGBOX-Icon-Style 48" /></td><!-- br --></tr><!-- br --><tr><!-- br -->  <td>64</td><td style="padding-right: 10px;"><img src="img/msgbox_icon64.gif" alt="Screenshot MSGBOX-Icon-Style 64" /></td><!-- br --></tr><!-- br --></table><!-- br --><!-- END MESSAGEBOX-BUTTON-STYLES --------------------------------------------------------------><!-- br --><!-- br --><br /><!-- br --><br /><!-- br --><img style="padding-top: 30px;" src="img/msgbox.gif" alt="Image of a messagebox at run-time, created using the MSGBOX-function." title="Screenshot" />§<font color="#808080">rem a simple messagebox-dialog (using MSGBOX as instruction)</font><br /><!-- br -->msgbox <font color="#0000ff">'Hello!'</font>, <font color="#0000ff">'Be welcome to RapidBATCH!'</font>, <font color="#0000ff">'64'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem messagebox with Yes-No-Cancel-Option (using MSGBOX as a function)</font><br /><!-- br -->msgbox <font color="#000080">[answer]</font> = <font color="#0000ff">'Saving file...'</font>, <font color="#0000ff">'Do you want to overwrite the file?'</font>, <font color="#0000ff">'3'</font> + <font color="#0000ff">'64'</font> + <font color="#0000ff">'256'</font><br /><!-- br --><b>if</b> <font color="#000080">[answer]</font> = <font color="#0000ff">'6'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected YES.'</font><br /><!-- br --><b>elseif</b> <font color="#000080">[answer]</font> = <font color="#0000ff">'7'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected NO.'</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected CANCEL.'</font><br /><!-- br --><b>endif</b>§In RapidBATCH 2.0, 2.2. and 3.0, MSGBOX was known as ECHOBOX. Alternatively RapidBATCH does also support ECHOBOX instead of MSGBOX, for downward compatibility.
rb5ref_en_4_inputboxpwdbox.html§INPUTBOX, PWDBOX§INPUTBOX value = title, prompting-text, default-value<br><!-- br -->PWDBOX value = title, prompting-text, default-value§INPUTBOX provides a dialog to simply prompt values from the user.<br><!-- br -->The function expects a title that is shown in the dialog's title bar, a prompting-text and a default-value that is pre-printed in the edit-field (where it can be changed, deleted or enhanced). If the user hits the OK-button, the function returns the value of the edit-field to the return-variable, if the user hits the CANCEL-button, the dialog returns an empty-string.<br><!-- br --><br><!-- br -->PWDBOX is a modification of the INPUTBOX to read masked values from the user, for example passwords (PWDBOX abbreviates PassWorD-BOX). The user can not see what he's typing, but the function itself returns the true value the user entered.<!-- br --><!-- br --><br /><br /><!-- br --><!-- br --><img style="padding-top: 30px;" src="img/inputbox.gif" alt="Image of an INPUTBOX-dialog." title="Screenshot" /><!-- br -->§<font color="#808080">rem getting values simply using the INPUTBOX</font><br /><!-- br -->inputbox <font color="#000080">[name]</font> = <font color="#0000ff">'Your name'</font>, <font color="#0000ff">'What is your name?'</font>, <font color="#0000ff">'Anonymous'</font><br /><!-- br -->echo <font color="#0000ff">'Hello, '</font> # <font color="#000080">[name]</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem prompting a password using PWDBOX</font><br /><!-- br -->pwdbox <font color="#000080">[password]</font> = <font color="#0000ff">'Password'</font>, <font color="#0000ff">'Please enter your password:'</font>, <font color="#0000ff">''</font><br /><!-- br --><b>if</b> <font color="#000080">[password]</font> = <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Error, no password specified.'</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Thank you very much, your password is: '</font> # <font color="#000080">[password]</font><br /><!-- br --><b>endif</b>§The captions of the OK- anc CANCEL-buttons can be changed over the variables [InputBox_Ok] and [InputBox_Cancel]. This will also affect the PWDBOX-dialog, because this uses the same dialog like INPUTBOX with the edit-field modification.<br><!-- br -->If the caption of the OK- or CANCEL-button is set to an empty-string, the corresponding button is hidden from the dialog, so that, for example, an INPUTBOX with only an OK-button can be displayed.<br><!-- br --><br><!-- br --><!-- br -->The position of the dialogs can also be changed, by setting the variables [InputBox_X] and [InputBox_Y] for the particular axis. If [InputBox_X] and/or [InputBox_Y] is set to the value '0', the dialog is automatially centered on the particular axis (this is the default), else any value, in pixels can be set. The size of INPUTBOX/PWDBOX can not be changed.<br><br><!-- br -->The dialog's icon can be globally changed for all dialogs using the variable [app_icon] to an external .ICO-file.
rb5ref_en_4_editbox.html§EDITBOX§EDITBOX text = titel, pre-text, style§EDITBOX provides a dialog to simply provide the user a possibility to edit and view huger amounts of text.<br><!-- br -->The function expects a dialog title, the text that is displayed in the edit field at dialog startup and a dialog-style that defines in which mode the dialog is executed. This style can be set to 'WRITEABLE' or '0', so the text in the edit-field can be changed and editied, or to the value 'READONLY' (or '-1'), that runs the dialog in a &quot;viewer-mode&quot;, so the text in the edit-field can only be viewed.<br><!-- br --><br><!-- br -->If the user presses the OK-button, the function returns the whole text in the edit-field, else, if the user hits CANCEL, the function returns an empty string.<!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/editbox.gif" alt="Image of an EDITBOX-dialog." title="Screenshot" /><!-- br -->§<font color="#808080">rem providing a simple text editing possility with only one line of code</font><br /><!-- br -->editbox <font color="#000080">[text]</font> = <font color="#0000ff">'Texteditor'</font>, <font color="#0000ff">''</font>, <font color="#0000ff">'writeable'</font><br /><!-- br -->echo <font color="#0000ff">'EDITBOX returned: '</font> # <font color="#000080">[text]</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem using EDITBOX to provide a text-viewer (readonly-mode)</font><br /><!-- br -->editbox <font color="#000080">[null]</font> = <font color="#0000ff">'text viewer'</font>, <font color="#0000ff">'This text can not be changed or edited!'</font>, <font color="#0000ff">'readonly'</font><br /><!-- br -->echo <font color="#0000ff">'EDITBOX returned: '</font> # <font color="#000080">[text]</font><!-- br -->§The captions of the OK- and CANCEL-buttons can be changed over the variables [EditBox_Ok] and [EditBox_Cancel]. If one (or both) of these variables is set to empty string, the particular button is hidden from the dialog.<br><!-- br --><br><!-- br -->The dialog can be positioned using the variables [EditBox_X] and [EditBox_Y] for the particular axis. If [EditBox_X] or [EditBox_Y] is set to '0', the dialog is automatically centered on the particular axis (this is the default), else the dialog is displayed at the specified position, that is given in pixels.<br><!-- br --><br><!-- br -->The default-size of the dialog can be changed to a desired size, in pixels, using the variables [EditBox_Width] (for the width) and [EditBox_Height] (for the height).<br><!-- br --><br><!-- br -->The dialog's icon can be globally changed for all dialogs using the variable [app_icon] to an external .ICO-file.
rb5ref_en_4_listbox.html§LISTBOX§LISTBOX selected-entry = titel, list-of-entries§Shows a possibility where the user can select one (or multiple) items from a list of defined items<br><!-- br --><br><!-- br -->As parameters, the function first expects a dialog title displayed in the dialog's title bar and the list of items that can be selected. In this list, each entry that is displayed in the list box is separated by the RapidBATCH standard list separator ([std_sep], that is a pipe by default).<br><br><!-- br --><!-- br -->Return value of the function is the selected entry, as it is displayed in the list.<br><!-- br -->If the user hits the dialog's close-button or if OK is clicked without selecting an entry, the function returns an empty string.<br><br><!-- br -->By default, LISTBOX allows only the selection of one single entry from the list. By setting the pre-declared variable [ListBox_MultiSel] to [true] or '0', LISTBOX will also allow multiple selection of entries. In this case, the function itself returns a list of items, those which had been selected, each separated by the standard separator (|).<!-- br --><!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/listbox.gif" alt="Image of a LISTBOX-dialog" title="Screenshot" />§<font color="#808080">rem LISTBOX with a single entry selection</font><br /><!-- br -->listbox <font color="#000080">[menu]</font> = <font color="#0000ff">'Menu I'</font>, <font color="#0000ff">'Pizza|Hamburger|Hot Dog|Fries'</font><br /><!-- br --><b>if</b> <font color="#000080">[menu]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Your order: '</font> # <font color="#000080">[menu]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You did not chose anything.'</font><br /><!-- br --><b>endif</b><br /><!-- br --><br /><!-- br --><font color="#808080">rem LISTBOX with multiple entry selection</font><br /><!-- br --><font color="#000080">[ListBox_MultiSel]</font> = <font color="#000080">[true]</font><br /><!-- br -->listbox <font color="#000080">[menu]</font> = <font color="#0000ff">'Menu II'</font>, <font color="#0000ff">'Pizza|Hamburger|Hot Dog|Fries'</font><br /><!-- br --><b>if</b> <font color="#000080">[menu]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;replacevar <font color="#000080">[menu]</font> = <font color="#000080">[menu]</font>, <font color="#000080">[std_sep]</font>, <font color="#000080">[new_line]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Your order(s): '</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[menu]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You did not chose anything.'</font><br /><!-- br --><b>endif</b>§The caption of the OK-button can be changed over the variable [ListBox_Ok]. If this variable is set to an empty-string, the button is hidden from the dialog.<br><!-- br --><br><!-- br -->The dialog can be positioned using the variables [ListBox_X] and [ListBox_Y] for the particular axis. If [ListBox_X] or [ListBox_Y] is set to '0', the dialog is automatically centered on the particular axis (this is the default), else the dialog is displayed at the specified position, that is given in pixels.<br><!-- br --><br><!-- br -->The default-size of the dialog can be changed to a desired size, in pixels, using the variables [ListBox_Width] (for the width) and [ListBox_Height] (for the height).<br><!-- br --><br><!-- br -->The dialog's icon can be globally changed for all dialogs using the variable [app_icon] to an external .ICO-file.
rb5ref_en_4_folderbox.html§FOLDERBOX§FOLDERBOX directory = prompting-text, pre-selected-path§The FOLDERBOX-function provides a standard folder selection dialog to select a folder from the file system.<br><!-- br --><br><!-- br -->As parameter, this function expects a prompting-text and an optional, pre-selected path that is directly opened by the dialog. The second parameter can left blank or specified as [null], so no path is pre-selected.<br><br /><!-- br --><!-- br --><img style="padding-top: 30px;" src="img/folderbox.gif" alt="Image of a folder-selection dialog created by FOLDERBOX" title="Screenshot" /><!-- br -->§folderbox <font color="#000080">[path]</font> = <font color="#0000ff">'Please select a folder:'</font>, <font color="#0000ff">'C:\jmksf\rb5'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[path]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'The folder you selected is: '</font> # <font color="#000080">[path]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'No folder selected.'</font><br /><!-- br --><b>endif</b>§Use the dialogs OPENBOX and SAVEBOX to provide a file selection possibility. FOLDERBOX is a dialog provided by the system, so neither its position can be changed nor its button-captions. These captions are automatically displayed in the particular language of the machine it is run with. 
rb5ref_en_4_openboxsavebox.html§OPENBOX, SAVEBOX§OPENBOX file = dialog-title, filter<br><!-- br -->SAVEBOX file = dialog-title, filter§OPENBOX provides a standard dialog to open a file.<br><!-- br -->OPENBOX provides a standard dialog to save a file.<br><!-- br --><br><!-- br -->As parameters, both functions expect a dialog-title, displayed in the particular dialog's title bar, and a file filter, that is specified the following way:<br><!-- br --><br><!-- br -->filter-name|filter<br><!-- br --><br><!-- br -->An example-filter for TXT-files is: &quot;Text files|*.txt&quot;.<br><!-- br -->To provide different filters (where one of them can be selected and set by the user at dialog run-time), the different filters can be specified as a list like in the following example: &quot;Text files|*.txt|Word files|*.doc&quot; ...<br><!-- br --><br><!-- br --><!-- br -->To manage more than one filter under one filter-name, the filter can be specified like this:<br><!-- br -->"Executable files|*.exe;*.com;*.bat".<br><!-- br --><br><!-- br -->Return-value of the function is the absolute filename, including path, the user specified. If the user hits the dialog's close-button or the Cancel-button, the particular function returns an empty-string.<br><!-- br --><br><!-- br --><!-- br -->If the pre-declared variable [OpenBox_MultiSel] (for OPENBOX) or [SaveBox_MultiSel] (for SAVEBOX) is set to [true] or '0', the particular dialog does also support multiple selection of files. In this case, the function call returns a list of filenames, where the first element is the absolute path of the directory the selected files are saved in. All trailing list elements are the filenames only.<!-- br --><!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/openbox.gif" alt="Bild eines OPENBOX-Dialoges" title="Screenshot" /><!-- br -->§<font color="#808080">rem single file selection</font><br /><!-- br -->openbox <font color="#000080">[file]</font> = <font color="#0000ff">'Please select a file...'</font>, <font color="#0000ff">'Text files|*.txt'</font><br /><!-- br --><b>if</b> <font color="#000080">[file]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected: '</font> # <font color="#000080">[file]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'No file selected.'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>halt</b><br /><!-- br --><b>endif</b><br /><!-- br --><br /><!-- br --><font color="#808080">rem multiple file selection</font><br /><!-- br --><font color="#000080">[OpenBox_MultiSel]</font> = <font color="#000080">[true]</font><br /><!-- br --><br /><!-- br -->openbox <font color="#000080">[file_list]</font> = <font color="#0000ff">'Select multiple files'</font>, <font color="#0000ff">'All files|*.*'</font><br /><!-- br --><b>if</b> <font color="#000080">[file_list]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[path]</font> = <font color="#000080">[file_list]</font>, <font color="#0000ff">'|'</font>, <font color="#0000ff">'1'</font><br /><!-- br --><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[i]</font> = <font color="#0000ff">'1'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>repeat</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[i]</font> + <font color="#0000ff">'1'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[file]</font> = <font color="#000080">[file_list]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[i]</font><br /><!-- br --><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>if</b> <font color="#000080">[file]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'File No. '</font> # (<font color="#000080">[i]</font> - <font color="#0000ff">'1'</font>) # <font color="#0000ff">': '</font> # <font color="#000080">[path]</font> # <font color="#0000ff">'\'</font> # <font color="#000080">[file]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>elseif</b> <font color="#000080">[file]</font> = <font color="#0000ff">''</font> & <font color="#000080">[i]</font> = <font color="#0000ff">'2'</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected: '</font> # <font color="#000080">[path]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>endif</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>until</b> <font color="#000080">[file]</font> = <font color="#0000ff">''</font><br /><!-- br --><b>endif</b>§The pipe-character (|) is the standard list separator to separate items in a RapidBACH list string. This can be modified by changing the content of the variable [std_sep].
rb5ref_en_4_infobox.html§INFOBOX§INFOBOX Meldung, Anzeigemodus§INFOBOX shows a message on the screen.<br><!-- br --><br><!-- br --><!-- br -->This dialog has no title-bar and is displayed in front of any other window that is currently opened. INFOBOX should be used to fade in short status messages or information. The dialog can once be shown, for example when the script performs system-specific operations in the background, and must manually be hidden when the script finished its background processes. The dialog can not be moved, deactivated or hidden by the user, only the script can do this.<!-- br --><br><!-- br --><!-- br -->INFOBOX expects as parameters a message that is displayed centered on the dialog, and the mode, if it is shown (parameter value 'show', '0' or [true]) or hidden (parameter value 'hide', '-1' or [false]).  To avoid a second call of INFOBOX to hide it, the variable [InfoBox_Enabled] can be set (either to 'show' or 'hide') to show or hide the dialog.<!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/infobox.gif" alt="Bild eines INFOBOX-Statusfensters" title="Screenshot" />§<font color="#808080">rem show the INFOBOX</font><br /><!-- br -->infobox <font color="#0000ff">'The script will be continued in 5 seconds...'</font>, <font color="#0000ff">'show'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem idle 5 seconds</font><br /><!-- br -->wait <font color="#0000ff">'5000'</font><br /><!-- br --><br /><!-- br --><font color="#808080">rem hide INFOBOX again</font><br /><!-- br --><font color="#000080">[InfoBox_Enabled]</font> = <font color="#0000ff">'hide'</font>§The dialog can be positioned using the variables [InfoBox_X] and [InfoBox_Y] for the particular axis. If [InfoBox_X] or [InfoBox_Y] is set to '0', a dialog is automatically centered on the particular axis (this is the default), else the dialog is displayed at the specified position, that is given in pixels.<br><!-- br --><br><!-- br -->The default-size of the dialog can be changed to a desired size, in pixels, using the variables [InfoBox_Width] (for the width) and [InfoBox_Height] (for the height)
rb5ref_en_4_traymenu.html§TRAYMENU§TRAYMENU selected-item = tooltip, list-of-items§Shows a program-menu as icon in the Windows-taskbar. The user can access the menu via right-click, or left-click the icon, causing the return of an empty-string by the function, so that other operations can be performed or dialogs can be shown.<br><br><!-- br --><!-- br -->As parameters, the function expects a prompting-text, that is displayed when the user moves the mouse over the taskbar-icon, and a list of items, building the menu. Each item of the menu is one element of the list, and each list-item is sepeated by a pipe-character or the as list standard separator defined character in [std_sep].<br><!-- br --><br><!-- br -->The return value of the function is the menu item's text that was selected or, if the user left-clicks the taskbar-icon, an empty-string.<!-- br --><!-- br --><br /><br /><!-- br --><img style="padding-top: 30px;" src="img/traymenu2.gif" alt="Using the Tray-Menu" title="Screenshot" />§traymenu <font color="#000080">[menu]</font> = <font color="#0000ff">'What do you want to eat?'</font>, <font color="#0000ff">'Pizza|Hamburger|Hot Dog|Fries'</font><br /><!-- br --><br /><!-- br --><b>if</b> <font color="#000080">[menu]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You selected: '</font> # <font color="#000080">[menu]</font><br /><!-- br --><b>else</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'You took no selection.'</font><br /><!-- br --><b>endif</b><!-- br -->§It is possible, to display a separation line in the menu, to visually separate different functions the menu provides. This is done by adding an element just containing a hyphen (-), for example 'Menu 1|Menu 2|-|Exit'. To define shortcuts that can be chosen from the menu using the ALT-key, write an &amp;-character in front of the character of the menu item that should be the shortcut-character.<!-- br --><br><!-- br --><br><!-- br -->TRAYMENU expects the same parameters like LISTBOX, so it just takes a few seconds to create a tray-menu bar from an ordinary listbox-menu.<!-- br --><br><!-- br --><br><!-- br --><!-- br -->The icon that is displayed in the taskbar can be changed over the variable [app_icon] globally to any other dialogs, by setting this to an external file with .ICO-extension.<!-- br -->
