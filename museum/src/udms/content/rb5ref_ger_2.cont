template_ref.html§0TITLE§1SYNTAX§1DESCRIPTION§1EXAMPLE§1REMARKS
rb5ref_ger_2_upvarlowvar.html§UPVAR, LOWVAR§UPVAR Ergebnis = Ausdruck<br><!-- br -->LOWVAR Ergebnis = Ausdruck§UPVAR wandelt alle Zeichen eines Stringausdrucks in Grossbuchstaben um.<br><!-- br -->LOWVAR wandelt alle Zeichen eines Stringausdrucks in Kleinbuchstaben um.<br><!-- br --><br><!-- br -->Bereits gross- bzw. kleingeschriebene Zeichen werden von der jeweiligen Funktion ignoriert.§<font color="#000080">[text]</font> = <font color="#0000ff">'Ein Test'</font><br /><!-- br -->upvar <font color="#000080">[utext]</font> = <font color="#000080">[text]</font><br /><!-- br -->lowvar <font color="#000080">[ltext]</font> = <font color="#000080">[text]</font><br /><!-- br -->echo <font color="#000080">[text]</font> # <font color="#0000ff">' in Großbuchstaben: '</font> # <font color="#000080">[utext]</font><br /><!-- br -->echo <font color="#000080">[text]</font> # <font color="#0000ff">' in Kleinbuchstaben: '</font> # <font color="#000080">[ltext]</font><br /><!-- br --><b>end</b>§keine
rb5ref_ger_2_trimvar.html§TRIMVAR§TRIMVAR Ergebnis = Ausdruck§Entfernt führende und nachfolgende Leerzeichen aus einer Zeichenfolge und gibt diese zurück.§<font color="#000080">[text]</font> = <font color="#0000ff">'&nbsp;&nbsp;&nbsp;&nbsp;RapidBATCH&nbsp;&nbsp;'</font><br /><!-- br -->echo <font color="#0000ff">'***'</font> # <font color="#000080">[text]</font> # <font color="#0000ff">'***'</font><br /><!-- br -->trimvar <font color="#000080">[trim_text]</font> = <font color="#000080">[text]</font><br /><!-- br -->echo <font color="#0000ff">'***'</font> # <font color="#000080">[trim_text]</font> # <font color="#0000ff">'***'</font><br /><!-- br --><b>end</b><!-- br -->§keine
rb5ref_ger_2_getchrgetasc.html§GETCHR, GETASC§GETCHR Zeichen = ASCII-Wert<br><!-- br -->GETASC ASCII-Wert = Zeichen§GETCHR gibt das durch den numerischen ASCII-Code spezifizierte ASCII-Zeichen zurück.<br><!-- br -->GETASC liefert zu dem ersten Zeichen eines Stringausdrucks den dazugehörigen ASCII-Code zurück.§getchr <font color="#000080">[zeichen]</font> = <font color="#0000ff">'65'</font><br /><!-- br -->echo <font color="#0000ff">'Geholtes Zeichen: '</font> # <font color="#000080">[zeichen]</font><br /><!-- br -->getasc <font color="#000080">[ascii]</font> = <font color="#0000ff">'B'</font><br /><!-- br -->echo <font color="#0000ff">'Das Zeichen "B" hat den ASCII-Code '</font> # <font color="#000080">[ascii]</font><br /><!-- br --><b>end</b><!-- br -->§keine
rb5ref_ger_2_getlen.html§GETLEN§GETLEN Länge = Ausdruck§Gibt die Anzahl der Zeichen (= Länge) des übergebenen Stringausdrucks zurück.§getlen <font color="#000080">[len]</font> = <font color="#0000ff">'Hello World'</font><br /><!-- br -->echo <font color="#0000ff">'Der Text "Hello World" ist '</font> # <font color="#000080">[len]</font> # <font color="#0000ff">' Zeichen lang.'</font><br /><!-- br --><b>end</b><!-- br -->§keine
rb5ref_ger_2_copyvar.html§COPYVAR§COPYVAR Teilstring = Stringausdruck, Start, Länge§COPYVAR gibt einen Teilstring aus einem String zurück.<br><!-- br --><br><!-- br -->Der <i>Start</i>-Parameter definiert dabei die Position des ersten Zeichens, ab dem der Teilstring kopiert werden soll, der <i>Länge</i>-Parameter die Anzahl der Zeichen ab der Startposition, die in den Teilstring kopiert werden sollen.§<font color="#000080">[name]</font> = <font color="#0000ff">'Arnold Schwarzenegger'</font><br /><!-- br --><font color="#808080">rem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;123456789012345678901 (Zeichenpositionen)</font><br /><!-- br -->copyvar <font color="#000080">[nachname]</font> = <font color="#000080">[name]</font>, <font color="#0000ff">'8'</font>, <font color="#0000ff">'14'</font><br /><!-- br -->copyvar <font color="#000080">[vorname]</font> = <font color="#000080">[name]</font>, <font color="#0000ff">'1'</font>, <font color="#0000ff">'6'</font><br /><!-- br -->echo <font color="#000080">[nachname]</font> # <font color="#0000ff">', '</font> # <font color="#000080">[vorname]</font><br /><!-- br --><b>end</b><!-- br -->§Wenn Sie als <i>Start</i>-Parameter den Wert '-1' übergeben, werden <i>Länge</i>-Zeichen von rechts aus dem String gelesen und als Teilstring zurückgegeben.
rb5ref_ger_2_getpos.html§GETPOS§GETPOS Position = Stringausdruck, Suchstring, Anzahl§Sucht den angegebenen Suchstring im Stringausdruck und gibt dessen Position im String zurück.<br><!-- br -->Mit Hilfe des <i>Anzahl</i>-Parameters kann auch nach dem zweiten, dritten usw. Aufkommen des Suchstrings im Stringausdruck gesucht werden.<br><!-- br --><br><!-- br -->Wird der Suchstring nicht an der angegebenen Position mit der gegebenen Anzahl gefunden, ist der Rückgabewert '0'.§getpos <font color="#000080">[pos]</font> = <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'llo'</font>, <font color="#0000ff">'1'</font><br /><!-- br -->echo <font color="#0000ff">'Position ist: '</font> # <font color="#000080">[pos]</font><br /><!-- br --><br /><!-- br -->getpos <font color="#000080">[pos]</font> = <font color="#0000ff">'Hello World'</font>, <font color="#0000ff">'l'</font>, <font color="#0000ff">'3'</font><br /><!-- br -->echo <font color="#0000ff">'Position ist: '</font> # <font color="#000080">[pos]</font><br /><!-- br --><b>end</b><!-- br -->§Hat die Variable [case_sensitivity] den Wert '-1', so berücksichtigt GETPOS auch Stringmuster, die sich von der Groß-/Kleinschreibung her von der Schreibweise des gegebenen Suchstrings unterscheiden. D.h. wenn der Suchstring z.B. in Kleinschreibweise vorliegt und [case_sensitivity] den Wert '-1' (false) hat, so wird auch ein in Großbuchstaben geschriebener, äquivalenter Substring gefunden.
rb5ref_ger_2_gettok.html§GETTOK§GETTOK Token = Stringausdruck, Trennstring, Token-Zähler§Die Tokenizer-Funktion GETTOK liefert ein so genanntes Token aus einem Stringausdruck zurück. Ein Token ist ein Substring, der durch ein Trennzeichen, z.B. das |-Zeichen von anderen Tokens getrennt ist. Als Trennzeichen (Trennstring) kann auch ein Stringausruck angegeben werden, der mehr als 1 Zeichen enthält. GETTOK liefert als Rückgabewert das Token von der übergebenen Token-Position zurück.§findfiles <font color="#000080">[files]</font> = <font color="#0000ff">'c:\jmksf\rb5\*.exe'</font>, <font color="#0000ff">'1'</font><br /><!-- br --><br /><!-- br --><font color="#000080">[count]</font> = <font color="#0000ff">'1'</font><br /><!-- br --><b>repeat</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;gettok <font color="#000080">[tok]</font> = <font color="#000080">[files]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[count]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>if</b> <font color="#000080">[tok]</font> ! <font color="#0000ff">''</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo <font color="#0000ff">'Token an Position '</font> # <font color="#000080">[count]</font> # <font color="#0000ff">' ist: '</font> # <font color="#000080">[tok]</font><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<b>endif</b><br /><!-- br -->&nbsp;&nbsp;&nbsp;&nbsp;<font color="#000080">[count]</font> + <font color="#0000ff">'1'</font><br /><!-- br --><b>until</b> <font color="#000080">[tok]</font> = <font color="#0000ff">''</font><br /><!-- br --><b>end</b><!-- br -->§Wird das Ende des Strings erreicht, gibt GETTOK das bis dahin gelesene Token zurück (sofern das letzte Zeichen kein Token-Trenner ist, wobei dies dann auch keine Rolle spielt).<br><!-- br -->Hat die Variable [case_sensitivity] den Wert '-1', so berücksichtigt GETTOK auch Token-Separatoren als solche, wenn diese sich von Groß-/Kleinschreibung her von der Schreibweise des gegebenen String-Separators unterscheiden. D.h. wenn der Token-Separator in Kleinschreibung vorliegt und [case_sensitivity] den Wert '-1' (false) hat, so wird auch ein großgeschriebener Token-Separator als solcher erkannt.
rb5ref_ger_2_getcharat.html§GETCHARAT§GETCHARAT Zeichen = Stringausdruck, Zeichenposition§Liefert das Zeichen an der gegebenen Position im gegebenen Stringausdruck zurück.<br><!-- br -->§<font color="#000080">[text]</font> = <font color="#0000ff">'Hello World'</font><br /><!-- br --><font color="#808080">rem&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12345678901</font><br /><!-- br -->getcharat <font color="#000080">[chr]</font> = <font color="#000080">[text]</font>, <font color="#0000ff">'5'</font><br /><!-- br -->echo <font color="#0000ff">'Das Zeichen an Position 5 im String '</font> # <font color="#000080">[text]</font> # <font color="#0000ff">' ist ein "'</font> # <font color="#000080">[chr]</font> # <font color="#0000ff">'"'</font><br /><!-- br --><b>end</b>§keine
rb5ref_ger_2_replacevar.html§REPLACEVAR§REPLACEVAR Ergebnisstring = Stringausdruck, Suchstring, Ersetzstring§Ersetzt jedes Aufkommen des gegebenen Suchstrings durch den Ersetzstring im gegebenen Stringausdruck. Rückgabewert ist der Stringausdruck mit den ersetzten Werten.§chdir <font color="#0000ff">'c:\jmksf\rb5'</font><br /><!-- br -->findfiles <font color="#000080">[files]</font> = <font color="#0000ff">'*.exe'</font>, <font color="#0000ff">'1'</font><br /><!-- br -->replacevar <font color="#000080">[files]</font> = <font color="#000080">[files]</font>, <font color="#0000ff">'|'</font>, <font color="#000080">[new_line]</font><br /><!-- br -->echo <font color="#0000ff">'Inhalt von '</font> # <font color="#000080">[current]</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[new_line]</font> # <font color="#000080">[files]</font><br /><!-- br --><b>end</b><!-- br -->§Hat die Variable [case_sensitivity] den Wert '-1', so berücksichtigt REPLACEVAR auch Stringmuster, die sich von der Groß-/Kleinschreibung her von der Schreibweise des gegebenen Suchstrings unterscheiden. D.h. wenn der Suchstring z.B. in Kleinschreibweise vorliegt und [case_sensitivity] den Wert '-1' (false) hat, so wird auch ein in Großbuchstaben geschriebener, äquivalenter Substring als solcher erkannt und ersetzt.
rb5ref_ger_2_randvar.html§RANDVAR§RANDVAR Zufallszahl = Maximalwert§Erzeugt eine Pseudo-Zufallszahl, die zwischen 0 und dem übergebenen <i>Maximalwert</i> - 1 liegt. Wenn der Funktion beispielsweise 40 übergeben wird, ist der mögliche Zufallswert zwischen 0 und 40.§<font color="#808080">rem Erzeuge Zufallszahl...</font><br /><!-- br -->randvar <font color="#000080">[random]</font> = <font color="#0000ff">'255'</font><br /><!-- br -->echo <font color="#0000ff">'Zufallszahl: '</font> # <font color="#000080">[random]</font><br /><!-- br --><b>end</b><!-- br -->§Bei der Implementation von RANDVAR wurde darauf geachtet, dass sich Zahlen nicht wiederholen. Es kann aber durchaus vorkommen, dass ein bestimmtes Muster bei mehrfachen Generierungen entsteht, da es sich bei RANDVAR um einen Pseudo-Zufallszahlengenerator handelt. Als Basis für die Zufallszahlen verwendet RANDVAR die Systemuhrzeit.
rb5ref_ger_2_cntvar.html§CNTVAR§CNTVAR Anzahl = Stringausdruck, Suchstring§Gibt die Anzahl der im Stringausdruck enthaltenen Suchstring-Ausdrücke zurück.§readfile <font color="#000080">[text]</font> = <font color="#0000ff">'C:\jmksf\rb5\readme.txt'</font>, <font color="#0000ff">'0'</font><br /><!-- br --><br /><!-- br -->cntvar <font color="#000080">[anzahl]</font> = <font color="#000080">[text]</font>, <font color="#0000ff">'RapidBATCH'</font><br /><!-- br -->echo <font color="#0000ff">'Die Datei beinhaltet '</font> # <font color="#000080">[anzahl]</font> # <font color="#0000ff">' X das Wort "RapidBATCH"'</font><br /><!-- br --><b>end</b><!-- br -->§Hat die Variable [case_sensitivity] den Wert '-1', so zählt CNTVAR auch Stringmuster, die sich von der Groß-/Kleinschreibung her von der Schreibweise des gegebenen Suchstrings unterscheiden. D.h. wenn der Suchstring z.B. in Kleinschreibweise vorliegt, und [case_sensitivity] den Wert '-1' (false) hat, so wird auch ein in Großbuchstaben geschriebener, äquivalenter Substring mitgezählt.
